import Head from "next/head";
import Image from "next/image";
import { SignInButton, SignOutButton, useUser } from "@clerk/nextjs";
import { useState } from "react";

import { api } from "~/utils/api"
import type { RouterOutputs } from "~/utils/api"

import dayjs from "dayjs";
import relativeTime from "dayjs/plugin/relativeTime";
import { LoadingPage } from "~/components/loading";
dayjs.extend(relativeTime);

const CreatePostWizard = () => {
  const { user } = useUser();
  const [message, setMessage] = useState("")
  const ctx = api.useContext();
  const { mutate } = api.posts.create.useMutation({
    onSuccess: () => {
      setMessage("");
      void ctx.posts.getAll.invalidate();
    }
  });

  if (!user) return null;

  return <div className="flex gap-4 w-full">
    <Image src={user.profileImageUrl} alt="Profile Image" className="w-16 h-16 rounded-full" width={56} height={56} />
    <input
      type="text"
      value={message}
      onChange={(e) => setMessage(e.target.value)}
      className="bg-transparent grow outline-none"
      placeholder="Type your message..." />
    <button onClick={() => mutate({ authorId: user.id, content: message })
    }>Send</button>
  </div>
}

type PostWithUser = RouterOutputs["posts"]["getAll"][number]

const PostView = (props: PostWithUser) => {
  const { post, author } = props;
  return (
    <div className="flex p-4 border-b border-slate-400 gap-4" key={post.id}>
      <Image className="w-16 h-16 rounded-full" src={author?.profilePicture} alt={`@${author.name}'s profile picture`} width={56} height={56} />
      <div className="flex flex-col">
        <div className="flex text-slate-400 gap-1">
          <span>{`@${author?.name}`}</span><span>{`â€¢ ${dayjs(post.createdAt).fromNow()}`}</span>
        </div>
        <span className="text-2xl">{post.content}</span>
      </div>
    </div>
  )
}

const Feed = () => {
  const { data, isLoading: postsLoading } = api.posts.getAll.useQuery();

  if (postsLoading) return <LoadingPage />;

  if (!data) return <div>Something went wrong!</div>;

  return (
    <div className="flex flex-col">
      {data.map((fullPost) =>
        <PostView {...fullPost} key={fullPost.post.id} />
      )}
    </div>
  )
}

export default function Home() {
  const { isLoaded: userLoaded, isSignedIn } = useUser();
  api.posts.getAll.useQuery();

  if (!userLoaded) return <div />

  return (
    <>
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="h-screen">
        {isSignedIn && <SignOutButton/>}
      <div className="flex justify-center">
        <div className="w-full h-full md:max-w-2xl border-x border-slate-400">
          <div className="border-b border-slate-400 p-4">
            {!isSignedIn && (<div className="flex justify-center p-5">
              <SignInButton />
            </div>)}
            {isSignedIn && <CreatePostWizard />}
          </div>
          <Feed />
        </div>
      </div >
      </div>
    </>
  );
}
